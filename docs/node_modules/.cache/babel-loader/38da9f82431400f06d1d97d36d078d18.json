{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Epic_\\\\Documents\\\\React Test\\\\react-refresh\\\\new-react\\\\src\\\\Trivia.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Timer from './Timer';\n/* this is the Trivia Game component. It will contain the list\r\n of trivia questions and a function to load and return\r\na question, adding used questions to a list and removing them from\r\nthe pool of available questions.\r\n */\n\nconst Trivia = () => {\n  _s();\n\n  const [curQ, setCurQ] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameActive, setGameActive] = useState(false); //Trivia game questions\n\n  const questions = [{\n    questionText: 'what alias does Jeffery Lebowski use?',\n    answerOptions: [{\n      answerText: 'Dude',\n      isCorrect: true\n    }, {\n      answerText: 'Walter',\n      isCorrect: false\n    }, {\n      answerText: 'Marmot',\n      isCorrect: false\n    }, {\n      answerText: 'Jackie Treehorn',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Who peed on the dudes rug?',\n    answerOptions: [{\n      answerText: 'Nihilists',\n      isCorrect: false\n    }, {\n      answerText: 'The Dude',\n      isCorrect: false\n    }, {\n      answerText: 'The Marmot',\n      isCorrect: false\n    }, {\n      answerText: 'Woo',\n      isCorrect: true\n    }]\n  }, {\n    questionText: 'Which actor played The Stranger?',\n    answerOptions: [{\n      answerText: 'Harrison Ford',\n      isCorrect: true\n    }, {\n      answerText: 'Jeff Lebowski',\n      isCorrect: false\n    }, {\n      answerText: 'Chuck Noris',\n      isCorrect: false\n    }, {\n      answerText: 'John Turturro',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'What is the date written on the check the dude post dates to pay for his creamer?',\n    answerOptions: [{\n      answerText: 'Nov 5th',\n      isCorrect: false\n    }, {\n      answerText: 'Sept 11th',\n      isCorrect: true\n    }, {\n      answerText: 'Oct 31st',\n      isCorrect: false\n    }, {\n      answerText: 'April 20th',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"What is the clean version of the infamous 'Do you see what happens larry?' scene?\",\n    answerOptions: [{\n      answerText: 'Find and store an apple',\n      isCorrect: false\n    }, {\n      answerText: 'Spend a summer in Atlanta',\n      isCorrect: false\n    }, {\n      answerText: 'Fill a stein and then ask',\n      isCorrect: false\n    }, {\n      answerText: 'Find a stranger in the Alps',\n      isCorrect: true\n    }]\n  }];\n\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect === true) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = curQ + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurQ(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const StartSection = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ready for a little trivia?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setGameActive(true),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 23\n  }, this);\n\n  const ShowScoreSection = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-section\",\n    children: [\"You scored \", score, \" out of \", questions.length]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 27\n  }, this);\n\n  const GameSection = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-count\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", curQ + 1, \"/\", questions.length, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: questions[curQ].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-section\",\n      children: questions[curQ].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerButtonClick(answerOption.isCorrect),\n        children: answerOption.answerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }, this), \")\"]\n  }, void 0, true);\n\n  if (gameActive) {\n    return /*#__PURE__*/_jsxDEV(StartSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this);\n  } else if (showScore) {\n    return /*#__PURE__*/_jsxDEV(ShowScoreSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(GameSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this);\n  }\n};\n\n_s(Trivia, \"QCWcxAWiWpXW8Y1Pufa9texji5k=\");\n\n_c = Trivia;\nexport default Trivia;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trivia\");","map":{"version":3,"sources":["C:/Users/Epic_/Documents/React Test/react-refresh/new-react/src/Trivia.js"],"names":["React","useState","useEffect","Timer","Trivia","curQ","setCurQ","showScore","setShowScore","score","setScore","gameActive","setGameActive","questions","questionText","answerOptions","answerText","isCorrect","handleAnswerButtonClick","nextQuestion","length","StartSection","ShowScoreSection","GameSection","map","answerOption"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport Timer from './Timer';\r\n\r\n\r\n/* this is the Trivia Game component. It will contain the list\r\n of trivia questions and a function to load and return\r\na question, adding used questions to a list and removing them from\r\nthe pool of available questions.\r\n */\r\nconst Trivia = ()=> { \r\n\r\n    const[curQ, setCurQ] = useState(0)\r\n    const[showScore, setShowScore] = useState(false);\r\n\tconst[score, setScore] = useState(0);\r\n\tconst[gameActive,setGameActive] = useState(false);\r\n       \r\n    //Trivia game questions\r\n    const questions = [\r\n        {\r\n            questionText: 'what alias does Jeffery Lebowski use?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Dude', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Walter', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Marmot', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Jackie Treehorn', isCorrect: false },\r\n\t\t\t],\r\n        },\r\n        {\r\n            questionText: 'Who peed on the dudes rug?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Nihilists', isCorrect: false },\r\n\t\t\t\t{ answerText: 'The Dude', isCorrect: false },\r\n\t\t\t\t{ answerText: 'The Marmot', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Woo', isCorrect: true },\r\n\t\t\t],\r\n        },\r\n        {\r\n            questionText: 'Which actor played The Stranger?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Harrison Ford', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Jeff Lebowski', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Chuck Noris', isCorrect: false },\r\n\t\t\t\t{ answerText: 'John Turturro', isCorrect: false },\r\n\t\t\t],\r\n        },\r\n        {\r\n            questionText: 'What is the date written on the check the dude post dates to pay for his creamer?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Nov 5th', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Sept 11th', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Oct 31st', isCorrect: false },\r\n\t\t\t\t{ answerText: 'April 20th', isCorrect: false },\r\n\t\t\t],\r\n        },\r\n        {\r\n            questionText: \"What is the clean version of the infamous 'Do you see what happens larry?' scene?\",\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Find and store an apple', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Spend a summer in Atlanta', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Fill a stein and then ask', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Find a stranger in the Alps', isCorrect: true },\r\n\t\t\t],\r\n        },\r\n\t];\r\n\r\n\r\n    const handleAnswerButtonClick = (isCorrect) => {\r\n\r\n        if(isCorrect === true){\r\n            setScore(score + 1);\r\n            }\r\n        const nextQuestion = curQ+1;\r\n        if(nextQuestion < questions.length){\r\n            setCurQ(nextQuestion);\t\r\n        } else {\r\n            setShowScore(true);\r\n            }\r\n\t};\r\n\tconst StartSection = <div className='score-section'>\r\n\t\t\t\t\t\t\t<h1>Ready for a little trivia?</h1>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<button onClick={setGameActive(true)}>Start</button>\r\n\t\t\t\t\t\t</div>;\r\n\tconst ShowScoreSection = <div className='score-section'>You scored {score} out of {questions.length}</div>\r\n\tconst GameSection =\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t\t<span>Question {curQ + 1}/{questions.length} </span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='question-text'><h1>{questions[curQ].questionText}</h1></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t\t{questions[curQ].answerOptions.map((answerOption) =>\r\n\t\t\t\t\t\t\t\t\t<button onClick={() => handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t</>\r\n\t\r\n\r\n\t\r\n\tif (gameActive){\r\n\t\treturn(\r\n\t\t\t<StartSection />\r\n\t\t)\r\n\t} else if (showScore){\r\n\t\treturn (\r\n\t\t\t<ShowScoreSection/>\r\n\t\t)\r\n\t} else {\r\n\t\treturn(\r\n\t\t\t<GameSection/>\r\n\t\t)\r\n\t}\r\n};\r\n    \r\n    \r\n\r\n\r\nexport default Trivia;"]},"metadata":{},"sourceType":"module"}