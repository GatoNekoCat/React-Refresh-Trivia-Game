{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Epic_\\\\Documents\\\\React Test\\\\react-refresh\\\\new-react\\\\src\\\\Timer.js\",\n    _s = $RefreshSig$();\n\n//Our timer needs know whether it is active or not. \n//When it becomes active it will  count by the second up to 30.\nimport React, { useState } from 'react';\nimport './Timer.css';\n\nconst Timer = () => {\n  _s();\n\n  //State\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false); //Toggle the isActive state\n\n  function toggle() {\n    setIsActive(!isActive);\n  } //Reset the timer\n\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  } //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerApp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: [seconds, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button button-primary button-primary-${isActive ? 'active' : 'inactive'}`,\n        onClick: toggle,\n        children: isActive ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"eRYdwB80z3qIC3wgZ1zNqfNKsMw=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/Epic_/Documents/React Test/react-refresh/new-react/src/Timer.js"],"names":["React","useState","Timer","seconds","setSeconds","isActive","setIsActive","toggle","reset"],"mappings":";;;;;AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACjB;AACA,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CAAD,CAArC;AACA,QAAK,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAvC,CAHiB,CAKnB;;AACE,WAASM,MAAT,GAAkB;AAChBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GARgB,CAUnB;;;AACE,WAASG,KAAT,GAAiB;AACjBJ,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAdkB,CAgBnB;;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBACGH,OADH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAG,wCAAuCE,QAAQ,GAAG,QAAH,GAAc,UAAW,EAA5F;AAA+F,QAAA,OAAO,EAAEE,MAAxG;AAAA,kBACGF,QAAQ,GAAG,OAAH,GAAa;AADxB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEG,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnCD;;GAAMN,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["//Our timer needs know whether it is active or not. \r\n//When it becomes active it will  count by the second up to 30.\r\nimport React, {useState } from 'react';\r\nimport './Timer.css';\r\n\r\nconst Timer = ()=> {\r\n  //State\r\n  const[seconds, setSeconds] = useState(0);\r\n  const[isActive, setIsActive] = useState(false);\r\n\r\n//Toggle the isActive state\r\n  function toggle() {\r\n    setIsActive(!isActive);\r\n  }\r\n\r\n//Reset the timer\r\n  function reset() {\r\n  setSeconds(0);\r\n  setIsActive(false);\r\n}\r\n\r\n//\r\n\r\n  \r\n\r\n  return(\r\n    <div className='timerApp'>\r\n      <div className='time'>\r\n        {seconds}s\r\n      </div>\r\n      <div className='row'>\r\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\r\n          {isActive ? 'Pause' : 'Start'}\r\n        </button>\r\n        <button className='button' onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}